# coding: utf-8

"""
    KubeVirt API

    This is KubeVirt API an add-on for Kubernetes.

    OpenAPI spec version: 1.0.0
    Contact: kubevirt-dev@googlegroups.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class V1KubeVirtSelfSignConfiguration(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ca': 'V1CertConfig',
        'ca_overlap_interval': 'K8sIoApimachineryPkgApisMetaV1Duration',
        'ca_rotate_interval': 'K8sIoApimachineryPkgApisMetaV1Duration',
        'cert_rotate_interval': 'K8sIoApimachineryPkgApisMetaV1Duration',
        'server': 'V1CertConfig'
    }

    attribute_map = {
        'ca': 'ca',
        'ca_overlap_interval': 'caOverlapInterval',
        'ca_rotate_interval': 'caRotateInterval',
        'cert_rotate_interval': 'certRotateInterval',
        'server': 'server'
    }

    def __init__(self, ca=None, ca_overlap_interval=None, ca_rotate_interval=None, cert_rotate_interval=None, server=None):
        """
        V1KubeVirtSelfSignConfiguration - a model defined in Swagger
        """

        self._ca = None
        self._ca_overlap_interval = None
        self._ca_rotate_interval = None
        self._cert_rotate_interval = None
        self._server = None

        if ca is not None:
          self.ca = ca
        if ca_overlap_interval is not None:
          self.ca_overlap_interval = ca_overlap_interval
        if ca_rotate_interval is not None:
          self.ca_rotate_interval = ca_rotate_interval
        if cert_rotate_interval is not None:
          self.cert_rotate_interval = cert_rotate_interval
        if server is not None:
          self.server = server

    @property
    def ca(self):
        """
        Gets the ca of this V1KubeVirtSelfSignConfiguration.
        CA configuration CA certs are kept in the CA bundle as long as they are valid

        :return: The ca of this V1KubeVirtSelfSignConfiguration.
        :rtype: V1CertConfig
        """
        return self._ca

    @ca.setter
    def ca(self, ca):
        """
        Sets the ca of this V1KubeVirtSelfSignConfiguration.
        CA configuration CA certs are kept in the CA bundle as long as they are valid

        :param ca: The ca of this V1KubeVirtSelfSignConfiguration.
        :type: V1CertConfig
        """

        self._ca = ca

    @property
    def ca_overlap_interval(self):
        """
        Gets the ca_overlap_interval of this V1KubeVirtSelfSignConfiguration.
        Deprecated. Use CA.Duration and CA.RenewBefore instead

        :return: The ca_overlap_interval of this V1KubeVirtSelfSignConfiguration.
        :rtype: K8sIoApimachineryPkgApisMetaV1Duration
        """
        return self._ca_overlap_interval

    @ca_overlap_interval.setter
    def ca_overlap_interval(self, ca_overlap_interval):
        """
        Sets the ca_overlap_interval of this V1KubeVirtSelfSignConfiguration.
        Deprecated. Use CA.Duration and CA.RenewBefore instead

        :param ca_overlap_interval: The ca_overlap_interval of this V1KubeVirtSelfSignConfiguration.
        :type: K8sIoApimachineryPkgApisMetaV1Duration
        """

        self._ca_overlap_interval = ca_overlap_interval

    @property
    def ca_rotate_interval(self):
        """
        Gets the ca_rotate_interval of this V1KubeVirtSelfSignConfiguration.
        Deprecated. Use CA.Duration instead

        :return: The ca_rotate_interval of this V1KubeVirtSelfSignConfiguration.
        :rtype: K8sIoApimachineryPkgApisMetaV1Duration
        """
        return self._ca_rotate_interval

    @ca_rotate_interval.setter
    def ca_rotate_interval(self, ca_rotate_interval):
        """
        Sets the ca_rotate_interval of this V1KubeVirtSelfSignConfiguration.
        Deprecated. Use CA.Duration instead

        :param ca_rotate_interval: The ca_rotate_interval of this V1KubeVirtSelfSignConfiguration.
        :type: K8sIoApimachineryPkgApisMetaV1Duration
        """

        self._ca_rotate_interval = ca_rotate_interval

    @property
    def cert_rotate_interval(self):
        """
        Gets the cert_rotate_interval of this V1KubeVirtSelfSignConfiguration.
        Deprecated. Use Server.Duration instead

        :return: The cert_rotate_interval of this V1KubeVirtSelfSignConfiguration.
        :rtype: K8sIoApimachineryPkgApisMetaV1Duration
        """
        return self._cert_rotate_interval

    @cert_rotate_interval.setter
    def cert_rotate_interval(self, cert_rotate_interval):
        """
        Sets the cert_rotate_interval of this V1KubeVirtSelfSignConfiguration.
        Deprecated. Use Server.Duration instead

        :param cert_rotate_interval: The cert_rotate_interval of this V1KubeVirtSelfSignConfiguration.
        :type: K8sIoApimachineryPkgApisMetaV1Duration
        """

        self._cert_rotate_interval = cert_rotate_interval

    @property
    def server(self):
        """
        Gets the server of this V1KubeVirtSelfSignConfiguration.
        Server configuration Certs are rotated and discarded

        :return: The server of this V1KubeVirtSelfSignConfiguration.
        :rtype: V1CertConfig
        """
        return self._server

    @server.setter
    def server(self, server):
        """
        Sets the server of this V1KubeVirtSelfSignConfiguration.
        Server configuration Certs are rotated and discarded

        :param server: The server of this V1KubeVirtSelfSignConfiguration.
        :type: V1CertConfig
        """

        self._server = server

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, V1KubeVirtSelfSignConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
