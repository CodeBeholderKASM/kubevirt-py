# coding: utf-8

"""
    KubeVirt API

    This is KubeVirt API an add-on for Kubernetes.

    OpenAPI spec version: 1.0.0
    Contact: kubevirt-dev@googlegroups.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class V1UserPasswordAccessCredentialPropagationMethod(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'qemu_guest_agent': 'V1QemuGuestAgentUserPasswordAccessCredentialPropagation'
    }

    attribute_map = {
        'qemu_guest_agent': 'qemuGuestAgent'
    }

    def __init__(self, qemu_guest_agent=None):
        """
        V1UserPasswordAccessCredentialPropagationMethod - a model defined in Swagger
        """

        self._qemu_guest_agent = None

        if qemu_guest_agent is not None:
          self.qemu_guest_agent = qemu_guest_agent

    @property
    def qemu_guest_agent(self):
        """
        Gets the qemu_guest_agent of this V1UserPasswordAccessCredentialPropagationMethod.
        QemuGuestAgentAccessCredentailPropagation means passwords are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.

        :return: The qemu_guest_agent of this V1UserPasswordAccessCredentialPropagationMethod.
        :rtype: V1QemuGuestAgentUserPasswordAccessCredentialPropagation
        """
        return self._qemu_guest_agent

    @qemu_guest_agent.setter
    def qemu_guest_agent(self, qemu_guest_agent):
        """
        Sets the qemu_guest_agent of this V1UserPasswordAccessCredentialPropagationMethod.
        QemuGuestAgentAccessCredentailPropagation means passwords are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.

        :param qemu_guest_agent: The qemu_guest_agent of this V1UserPasswordAccessCredentialPropagationMethod.
        :type: V1QemuGuestAgentUserPasswordAccessCredentialPropagation
        """

        self._qemu_guest_agent = qemu_guest_agent

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, V1UserPasswordAccessCredentialPropagationMethod):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
